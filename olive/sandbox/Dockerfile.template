# olive/sandbox/Dockerfile(.template)

#
# IMPORTANT BUILD NOTE:
# You must set the build context to the project root, which contains cli/,
# pyproject.toml, and everything else Olive needs.
#
# TODO: REMOVEME/REPLACEME/GENERICIZEME
# example for local olive development:
# cd ~/Projects/olive && docker build -f cli/olive/sandbox/Dockerfile -t olive/sandbox:latest .


# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# ðŸ§± Olive Sandbox Dockerfile (multi-stage, optimized)
# This image runs the Olive CLI inside a containerized sandbox.
# Behavior:
# - Installs Olive from source into a venv using uv
# - Mounts the host project at /mnt/project
# - Copies ~/.olive into /home/olive/.olive (but disables sandbox in preferences)
# - Runs `olive init` inside the mounted project to prepare it as an Olive repo
# - Launches as an unprivileged user
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

FROM python:3.13-slim AS builder

# Install required build deps
RUN apt-get update && apt-get install -y \
    git bash curl build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install uv globally
RUN curl -LsSf https://astral.sh/uv/install.sh | sh \
    && mv /root/.local/bin/uv /usr/local/bin/uv

WORKDIR /olive
COPY {{ olive_source_path }} /olive



# Install Olive into a venv at root
RUN uv venv && uv pip install -e ".[dev,http,syntax]"

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Runtime stage â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

FROM python:3.13-slim

# Create non-root Olive user with home directory
RUN useradd -m -d /home/olive olive

# Minimal runtime deps
RUN apt-get update \
    && apt-get install -y uuid-runtime bash git curl tmux \
    && rm -rf /var/lib/apt/lists/*

# Copy preinstalled Olive venv and code
COPY --from=builder /olive /olive

# Copy host snapshot of ~/.olive (.olive-snapshot) into container home (not mounted)
COPY {{ olive_prefs_snapshot }} /home/{{ olive_user }}/.olive

# Disable sandbox inside container prefs (avoid nested sandbox inside sandbox)
RUN /olive/.venv/bin/python -c "import yaml; p = '/home/olive/.olive/preferences.yml'; d = yaml.safe_load(open(p)); d['sandbox']['enabled'] = False; open(p, 'w').write(yaml.safe_dump(d))"

# Ensure ownership
RUN chown -R olive:olive /home/olive/.olive

# Entrypoint, activate venv, set to executable 
COPY .olive/sandbox/entrypoint.sh /usr/local/bin/olive
RUN chmod +x /usr/local/bin/olive

USER olive

ENV HOME=/home/olive
WORKDIR /mnt/project
ENTRYPOINT ["/usr/local/bin/olive"]
