[project]
name = "olive"
version = "0.1.1"
description = "Olive CLI & HTTP"

# ---------------------------------------------------------------------------
# Core runtime deps – keep base install lean but functional
# ---------------------------------------------------------------------------
dependencies = [
    # --- CLI / UI ---
    "typer>=0.9",
    "rich>=13",
    "prompt_toolkit>=3.0",

    # --- Core ---
    "pydantic>=2.6,<3",
    "anyio>=4",

    # --- LLM / tokenisation ---
    "openai>=1,<2",
    "tiktoken>=0.6",

    # --- YAML / config ---
    "pyyaml>=6",

    # --- File‑system notifications ---
    "watchdog>=6",

    # --- Tree sitter ---
    "tree-sitter >= 0.20,<0.22",
]

requires-python = ">=3.11"


# ---------------------------------------------------------------------------
# Entrypoints
# ---------------------------------------------------------------------------
[project.scripts]
olive = "olive.cli:app"

[tool.setuptools]
packages = { find = { include = ["olive*"] } }
include-package-data = true

[tool.setuptools.package-data]
"olive" = ["**/*", "!**/*.py"]

# ---------------------------------------------------------------------------
# Optional extras
# ---------------------------------------------------------------------------
[project.optional-dependencies]
http = [
    # HTTP/ASGI stack
    "fastapi>=0.110,<1",
    "uvicorn[standard]>=0.29,<1",
]

dev = [
    "pytest>=8.2",
    "pytest-cov>=4",
    "pytest-asyncio>=0.23",
    "httpx>=0.27",
]

# Syntax-aware parsing for multi-language projects
# NOTE: Wheels for these grammars may lag behind cutting-edge Python ABIs.
# pip will automatically fall back to building from source (needs a C compiler).
syntax = [
    "tree_sitter_javascript>=0.23,<1",
    "tree_sitter_typescript>=0.23,<1",
    "tree_sitter_css>=0.23,<1",
    "tree_sitter_html>=0.23,<1",
    "tree_sitter_c>=0.23,<1",
    "tree_sitter_cpp>=0.23,<1",
    "tree_sitter_rust>=0.23,<1",
    "tree_sitter_go>=0.23,<1",

    # grammars still in the 0.2-0.4 range
    "tree_sitter_lua<1",
    "tree_sitter_commonlisp<1",
]

voice = [
    # Speech-to-text (offline Whisper v3 models, CTranslate2 backend)
    "faster-whisper>=1.1.1",     # pulls in ctranslate2>=4.6.0 automatically 

    # Live audio + DSP
    "sounddevice>=0.5.2",
    "numpy>=2.2.6",
    "scipy>=1.15.3",
    # Deep-learning backend – platform-matched wheels &
    # CUDA / MPS handled automatically by pip
    "torch>=2.7,<3",
]
